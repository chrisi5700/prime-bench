#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/home/chris/Documents/cpp/PrimesBench/Concurrent/find_primesv3.hpp
../prime_utils.hpp
/home/chris/Documents/cpp/PrimesBench/prime_utils.hpp

/home/chris/Documents/cpp/PrimesBench/Sequential/prime_seq.hpp
../prime_utils.hpp
/home/chris/Documents/cpp/PrimesBench/prime_utils.hpp

/home/chris/Documents/cpp/PrimesBench/Sequential/sieve_of_aktin.hpp
../prime_utils.hpp
/home/chris/Documents/cpp/PrimesBench/prime_utils.hpp

/home/chris/Documents/cpp/PrimesBench/Sequential/sieve_of_eratosthenes.hpp
../prime_utils.hpp
/home/chris/Documents/cpp/PrimesBench/prime_utils.hpp

/home/chris/Documents/cpp/PrimesBench/Sequential/sieve_of_euler.hpp
../prime_utils.hpp
/home/chris/Documents/cpp/PrimesBench/prime_utils.hpp

/home/chris/Documents/cpp/PrimesBench/Sequential/sieve_of_sundaram.hpp
../prime_utils.hpp
/home/chris/Documents/cpp/PrimesBench/prime_utils.hpp

/home/chris/Documents/cpp/PrimesBench/prime_utils.hpp
thread
-
barrier
-
vector
-
array
-
cmath
-
deque
-
iostream
-
algorithm
-
bit
-
atomic
-
mutex
-
shared_mutex
-
utility
-

/home/chris/Documents/cpp/PrimesBench/test.cpp
Concurrent/find_primesv3.hpp
/home/chris/Documents/cpp/PrimesBench/Concurrent/find_primesv3.hpp
Sequential/prime_seq.hpp
/home/chris/Documents/cpp/PrimesBench/Sequential/prime_seq.hpp
Sequential/sieve_of_aktin.hpp
/home/chris/Documents/cpp/PrimesBench/Sequential/sieve_of_aktin.hpp
Sequential/sieve_of_sundaram.hpp
/home/chris/Documents/cpp/PrimesBench/Sequential/sieve_of_sundaram.hpp
Sequential/sieve_of_eratosthenes.hpp
/home/chris/Documents/cpp/PrimesBench/Sequential/sieve_of_eratosthenes.hpp
Sequential/sieve_of_euler.hpp
/home/chris/Documents/cpp/PrimesBench/Sequential/sieve_of_euler.hpp
algorithm
-

